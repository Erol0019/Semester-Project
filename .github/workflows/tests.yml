name: Testing rpg_api

on: push

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
      - name: Install deps
        run: |
          poetry install
      - name: Run black check
        run: |
          poetry run black --check .
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - run: pip install ruff
      - run: ruff .
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
      - name: Install deps
        run: |
          poetry install
      - name: Run mypy check
        run: |
          poetry run mypy .
  pytest:
    runs-on: ubuntu-latest
    services:
      rpg_api-db:
        image: postgres:13.8-bullseye
        env:
          POSTGRES_PASSWORD: rpg_api
          POSTGRES_USER: rpg_api
          POSTGRES_DB: rpg_api
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5435:5432
      rpg_api-neo4j:
        image: neo4j:latest
        env:
          NEO4J_AUTH: neo4j/password
        ports:
          - 7474:7474 # HTTP
          - 7687:7687 # Bolt
        options: >-
          --health-cmd="cypher-shell -u neo4j -p password 'RETURN 1;'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      rpg_api-mongo:
        image: mongo:latest
        env:
          MONGO_INITDB_DATABASE: rpg_api
          MONGO_INITDB_ROOT_USERNAME: rpg_api
          MONGO_INITDB_ROOT_PASSWORD: rpg_api
        ports:
          - 27017:27017
        options: >-
          --health-cmd="echo 'db.runCommand({ping: 1})' | mongosh --quiet localhost/test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
      - name: Install deps
        run: |
          poetry install
      - name: Run pytest
        run: |
          poetry run pytest ./rpg_api/tests/pytest -vv --cov="." --cov-report=xml --cov-branch
        env:
          RPG_API_HOST: "0.0.0.0"
          RPG_API_DB_HOST: localhost
          RPG_API_NEO_HOST: neo4j://localhost:7687
          RPG_API_NEO_USER: neo4j
          RPG_API_NEO_PASS: password
          RPG_API_MONGO_URI: mongodb://rpg_api:rpg_api@localhost:27000/rpg_api?authSource=admin
      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
